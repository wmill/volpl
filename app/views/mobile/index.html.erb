<!DOCTYPE html> 
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1"> 
    <title>Mobitrack</title> 
    <%= stylesheet_link_tag "jquery.mobile-1.2.0.css" %>
    <%= javascript_include_tag "jquery-1.8.2.min" %>
    <%= javascript_include_tag "jquery.mobile-1.2.0.min" %>
    <%= javascript_include_tag "mustache.min" %>
    <%= javascript_include_tag "underscore-min" %>



    <script id="riding-divider-template" type="text/mustache-template">
    {{#ridings}}
        <li data-role="list-divider">{{riding_name}}</li>
        {{#people}}
          <li id='person-{{id}}'>
            <a href="#persons?person={{id}}"  data-transition="slide">{{first_name}} {{last_name}} &mdash; {{riding}}</a>
          </li>
        {{/people}}
    {{/ridings}}
    </script>

    <script id="error-list-template" type="text/mustache-template">
      <li id='error-{{id}}'>
        <a href="#" onclick='repostObservation({{id}}, {{value}})'>
            Connection Error: {{first_name}} {{last_name}} &mdash; {{riding}}          
        </a>
      </li>
    </script>

    <script id="connection-list-template" type="text/mustache-template">
      <li id='active-{{id}}'>

            Connecting: {{value}}, {{first_name}} {{last_name}} &mdash; {{riding}}          

      </li>
    </script>
    
    <script id="person-view-template" type="text/mustache-template">
    <div id="person-{{id}}-view-page" data-role="page">
        <div id="person-view-header-{{id}}" data-role="header"><h1>{{first_name}} {{last_name}}</h1>
          <a data-role="button" href="/logout" data-icon="gear" data-iconpos="left" class="ui-btn-right" data-ajax="false">
            Log Out
          </a>
        </div>
            <div id="person-view-content-{{id}}" data-role="content">
            {{first_name}} {{last_name}} <br>
            {{riding}}
            <div class="field">
                <fieldset data-role="controlgroup" id='person-{{index}}-controlgroup'>
                    <!-- TODO: 5 buttons or radio buttons? -->
                    <a href="#observations?person={{id}}&amp;value=1" data-role="button">1 :)</a>
                    <a href="#observations?person={{id}}&amp;value=2" data-role="button">2</a>
                    <a href="#observations?person={{id}}&amp;value=3" data-role="button">3 :|</a>
                    <a href="#observations?person={{id}}&amp;value=4" data-role="button">4</a>
                    <a href="#observations?person={{id}}&amp;value=5" data-role="button">5 :(</a>
                </fieldset>
            </div>
            <a href="#home" data-role="button" data-transition="slide" data-direction="reverse">Back</a>
            
        </div>
        <div data-role="footer" data-id="page-footer" data-position="fixed">
            <div data-role="navbar">
                <ul>
                    <li><a href="#home">People</a></li>
                    <li><a href="#connections">Connections</a></li>
                </ul>
            </div>
        </div>
    </div>
    </script>
    
    
<script type="text/javascript" charset="utf-8">
    window.persons_list = {};
    window.person_index_by_id = {};
    
    $(function() {
        $.ajax({
            'url':'/people',
            'dataType':'json',
            
            success: function(data){
                window.persons_list['persons'] = data;
                addIndexToObjectList(persons_list.persons);
                createIdIndex(persons_list.persons, person_index_by_id);
                
                //altPopulate("");

            },
            error: function(jqXHR) {
                $('#connection_error_dialog').popup();
            }
        });
        
        //Listen for changes in the search box
        function apply_filter(){
            filter_string = $("#search-basic").val();
            console.log(filter_string);
            if (filter_string.length > 1){
                altPopulate(filter_string);
            } 
            else {
                $('#delegate-list').html("");
            }
        }
        $("#search-basic").keyup(apply_filter);
        $("#search-basic").change(apply_filter);

 
        // Listen for any attempts to call changePage().
        $(document).bind( "pagebeforechange", function( e, data ) {
            if ( typeof data.toPage === "string" ) {
                var u = $.mobile.path.parseUrl( data.toPage );
                if ( u.hash.search(/^#persons/) !== -1 ) {
                    //console.log(data.options);
                    var person_index = ( 
                        hash2json(u.hash)['person']
                    );
                    showPerson(u, person_index, data.options );

                    // Make sure to tell changePage() we've handled this call so it doesn't
                    // have to do anything.
                    e.preventDefault();
                }
            }
        });
        // bind the pagebeforechange event for the new page
        // these event listers are added to the global scope and chained.
        $(document).bind( "pagebeforechange", function( e, data ) {
            if ( typeof data.toPage === "string" ) {
                var u = $.mobile.path.parseUrl( data.toPage );
                if ( u.hash.search(/^#observations/) !== -1 ) {
                    var hash_vars = hash2json(u.hash);
                    console.log(hash_vars);
                    postObservation(hash_vars['person'], hash_vars['value']);
                    $.mobile.changePage("#home", {transition: 'slide', reverse:'true'});
                    // Make sure to tell changePage() we've handled this call so it doesn't
                    // have to do anything.
                    e.preventDefault();
                }
            }
        });
        
        //enhance the connection page, normally done lazily, but we need to write to it in the background
        $('#connections').page();
        //load the persons data
        

    });
    
    
    //this function needed for
    //_.filter(list, match_person());
    //_.filter(persons_list.persons, (match_person("jones")));
    function match_person(filter_string){
        //returns function to be called by 'filter' 
        //this way dom is only searched once.
        var pattern = RegExp('^' + filter_string, 'i');
        return function(person){       
            return ( 
                pattern.test(person.first_name) ||
                pattern.test(person.last_name) ||
                pattern.test(person.riding) 
            );
        }
    }
    
    function populate(){
        var template = $('#person-list-template').html();
        var html = Mustache.to_html(template, persons_list);

        $('#delegate-list').html(html);
        $('#delegate-list').listview('refresh');        
    }
    
    function altPopulate(filter_string){
        
        var list = altGroupByRiding(filter_string);
        var template = $('#riding-divider-template').html();
        var html = Mustache.to_html(template, list);

        $('#delegate-list').html(html);
        $('#delegate-list').listview('refresh');
    }
    
    function altGroupByRiding(filter_string){
        var people = _.filter(persons_list.persons, (match_person(filter_string)));
        var ret_obj = {'ridings': []};
        var list = _.pairs(_.groupBy(people, 'riding'));
        
        for (var i=0; i< list.length; i++){
            var riding_obj = {'riding_name': list[i][0], 'people': list[i][1]}
            ret_obj.ridings.push(riding_obj);
        }
        return ret_obj;
    }

    function showPerson(urlObj, person_id, options ){
        var page_element_id = "#person-" +  person_id  + "-view-page";
        
        //add a new page if it doesn't exist
        if ($(page_element_id).length == 0){
            var person_index = person_index_by_id[person_id];
            var person = persons_list.persons[person_index];
            var template = $('#person-view-template').html();
            var html = Mustache.to_html(template, person);
            $("#home").after(html);
        }
        
        var $page = $(page_element_id);
        //do jqm formatting 
        $page.page();
        
        /// From sample code ...
        // We don't want the data-url of the page we just modified
        // to be the url that shows up in the browser's location field,
        // so set the dataUrl option to the URL for the category
        // we just loaded.
        options.dataUrl = urlObj.href;
        
        // Now call changePage() and tell it to switch to
        // the page we just modified.
        $.mobile.changePage( $page, options );
        

    }
    
    function hash2json(url){
        var get_variables_string = url.split("?")[1];
        var get_variables = get_variables_string.split("&");
        var json_data = {};
        for (i=0; i < get_variables.length; i++){
            var key_val = get_variables[i].split("=");
            json_data[key_val[0]] = key_val[1];
        }
        return json_data;
    }
    
    function addIndexToObjectList(list){
        for (i=0;i<list.length;i++){
            list[i]["index"] = i;
        }
    }
    function createIdIndex(list, index_dict){
        for (i=0;i<list.length;i++){
            index_dict[list[i]["id"]] = i;
        }        
    }
    
    
    function postObservation(person_id, value){
        console.log(person_id);
        var person_index = person_index_by_id[person_id];
        var person = persons_list.persons[person_index];
        
        //use the active connection li
        var template = $('#connection-list-template').html();
        var html = Mustache.to_html(template, {
            'id': person.id,
            'first_name': person.first_name ,
            'last_name': person.last_name,
            'riding': person.riding,
            'value':value,
        });
               
        $('#active-connection-ul').append(html);
        $('#active-connection-ul').listview('refresh');
        
        //set up the actual ajax call
        var json_data = JSON.stringify({'person_id': person_id, 'value': value});
        
        $.ajax("/observation/create", {
            cache: false,
            data: json_data,
            type: 'POST',
            contentType:'application/json',
            //dataType: 'application/json',
            success: function(data, textStatus, jqXHR){
                //yay
                $("#active-" + person_id).remove();
            },
            
            error: function(jqXHR, textStatus, errorThrown) {
                $("#active-" + person_id).remove();
                var template = $('#error-list-template').html();
                var html = Mustache.to_html(template, {
                    'id': person.id,
                    'first_name': person.first_name ,
                    'last_name': person.last_name,
                    'riding': person.riding,
                    'value':value,
                    'status': textStatus, 
                    'error': errorThrown
                });
                $('#error-connection-ul').append(html);
                $('#error-connection-ul').listview('refresh');
            }
        });

    }
    
    function repostObservation(person_id, value){
        //remove li
        $("#error-" + person_id).remove();
        postObservation(person_id, value);        
    }
</script>



</head> 

    
<body>
<div id="home" data-role="page">
  <div data-role="header"><h1>Delegates</h1>
    <a data-role="button" href="/logout" data-icon="gear" data-iconpos="left" class="ui-btn-right" data-ajax="false">
      Log Out
    </a>
  </div>
  <div data-role="content">  
    <label for="search-basic">Search Input:</label>
    <input type="search" name="search" id="search-basic" value="" />

    <ul data-role="listview" data-inset="true" id='delegate-list'>

    </ul>
  </div>
  <div data-role="footer" data-id="page-footer" data-position="fixed">
    <div data-role="navbar">
        <ul>
            <li><a href="#home">People</a></li>
            <li><a href="#connections">Connections</a></li>
        </ul>
    </div>
  </div>
  <div data-role="popup" id="connection_error_dialog" data-overlay-theme="a" data-theme="c" style="max-width:400px;" class="ui-corner-all">
    <div data-role="header" data-theme="a" class="ui-corner-top">
        <h1>Connection Error</h1>
    </div>
    <div data-role="content"  data-theme="d" class="ui-corner-bottom ui-content">
        
        <h3 class="ui-title">Could not load "People"</h3>
        <p>Unable to populate list. Please reload page.</p>  
        <a href="#" data-role="button" data-inline="true" data-rel="back" data-transition="flow" data-theme="b">OK</a>  
    </div>
  </div>
</div>

<div id='connections' data-role='page'>
    <h3>Active</h3>
    <ul id='active-connection-ul' data-role="listview" data-inset="true">
    </ul>
    <h3>Errors</h3>
    <ul id='error-connection-ul' data-role="listview" data-inset="true">
    </ul>    
    <div data-role="footer" data-id="page-footer" data-position="fixed">
        <div data-role="navbar">
            <ul>
                <li><a href="#home">People</a></li>
                <li><a href="#connections">Connections</a></li>
            </ul>
        </div>
    </div>
</div>
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-36966867-1']);
  _gaq.push(['_setDomainName', 'herokuapp.com']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>

</body>
</html>